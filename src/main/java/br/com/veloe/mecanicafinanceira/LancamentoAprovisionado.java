/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package br.com.veloe.mecanicafinanceira;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
/** Schema do tópico de Transação MF_ADQ_TP_LANCAMENTO_APROVISIONADO. */
@org.apache.avro.specific.AvroGenerated
public class LancamentoAprovisionado extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 3503721894610223562L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"LancamentoAprovisionado\",\"namespace\":\"br.com.veloe.mecanicafinanceira\",\"doc\":\"Schema do tópico de Transação MF_ADQ_TP_LANCAMENTO_APROVISIONADO.\",\"fields\":[{\"name\":\"DataEnvio\",\"type\":[\"string\",\"null\"],\"doc\":\"Data do envio.\"},{\"name\":\"IdCoreBank\",\"type\":[\"long\",\"null\"],\"doc\":\"Id no core bank.\"},{\"name\":\"IdConta\",\"type\":[\"string\",\"null\"],\"doc\":\"Id da conta.\"},{\"name\":\"IdIdentificador\",\"type\":[\"string\",\"null\"],\"doc\":\"Identificador do executor Transação.\"},{\"name\":\"IdAutorizador\",\"type\":[\"string\",\"null\"],\"doc\":\"Id do autorizador.\"},{\"name\":\"Estorno\",\"type\":[\"int\",\"null\"],\"doc\":\"Flag que representa se a Transação é um estorno.\"},{\"name\":\"Reversao\",\"type\":[\"int\",\"null\"],\"doc\":\"Flag que representa se a Transação é uma reversão.\"},{\"name\":\"Status\",\"type\":[\"string\",\"null\"],\"doc\":\"Enum que representa o status da Transação. Ex.: COMPENSADO.\"},{\"name\":\"Valor\",\"type\":[\"double\",\"null\"],\"doc\":\"Valor da Transação.\"},{\"name\":\"FatorDebCred\",\"type\":[\"int\",\"null\"],\"doc\":\"Identificador de lançamento de débito ou crédito.\"},{\"name\":\"TipoConta\",\"type\":[\"string\",\"null\"],\"doc\":\"Enum que representa o tipo da Conta. Ex.: EC, PORTADOR\"},{\"name\":\"DataRepasse\",\"type\":[\"string\",\"null\"],\"doc\":\"Data do repasse.\"},{\"name\":\"IdRazaoTransacao\",\"type\":[\"long\",\"null\"],\"doc\":\"Identificador da razão de transação.\"},{\"name\":\"IdGrupoTransacao\",\"type\":[\"long\",\"null\"],\"doc\":\"Identificador do grupo de transação.\"},{\"name\":\"IdTransacao\",\"type\":[\"string\",\"null\"],\"doc\":\"Id da transação.\"},{\"name\":\"Atividade\",\"type\":[\"string\",\"null\"],\"doc\":\"Enum que representa a atividade da Transação. Ex.: PASSAGEM_DENTRO_SLA.\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<LancamentoAprovisionado> ENCODER =
      new BinaryMessageEncoder<LancamentoAprovisionado>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<LancamentoAprovisionado> DECODER =
      new BinaryMessageDecoder<LancamentoAprovisionado>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<LancamentoAprovisionado> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<LancamentoAprovisionado> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<LancamentoAprovisionado>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this LancamentoAprovisionado to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a LancamentoAprovisionado from a ByteBuffer. */
  public static LancamentoAprovisionado fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** Data do envio. */
  @Deprecated public java.lang.CharSequence DataEnvio;
  /** Id no core bank. */
  @Deprecated public java.lang.Long IdCoreBank;
  /** Id da conta. */
  @Deprecated public java.lang.CharSequence IdConta;
  /** Identificador do executor Transação. */
  @Deprecated public java.lang.CharSequence IdIdentificador;
  /** Id do autorizador. */
  @Deprecated public java.lang.CharSequence IdAutorizador;
  /** Flag que representa se a Transação é um estorno. */
  @Deprecated public java.lang.Integer Estorno;
  /** Flag que representa se a Transação é uma reversão. */
  @Deprecated public java.lang.Integer Reversao;
  /** Enum que representa o status da Transação. Ex.: COMPENSADO. */
  @Deprecated public java.lang.CharSequence Status;
  /** Valor da Transação. */
  @Deprecated public java.lang.Double Valor;
  /** Identificador de lançamento de débito ou crédito. */
  @Deprecated public java.lang.Integer FatorDebCred;
  /** Enum que representa o tipo da Conta. Ex.: EC, PORTADOR */
  @Deprecated public java.lang.CharSequence TipoConta;
  /** Data do repasse. */
  @Deprecated public java.lang.CharSequence DataRepasse;
  /** Identificador da razão de transação. */
  @Deprecated public java.lang.Long IdRazaoTransacao;
  /** Identificador do grupo de transação. */
  @Deprecated public java.lang.Long IdGrupoTransacao;
  /** Id da transação. */
  @Deprecated public java.lang.CharSequence IdTransacao;
  /** Enum que representa a atividade da Transação. Ex.: PASSAGEM_DENTRO_SLA. */
  @Deprecated public java.lang.CharSequence Atividade;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public LancamentoAprovisionado() {}

  /**
   * All-args constructor.
   * @param DataEnvio Data do envio.
   * @param IdCoreBank Id no core bank.
   * @param IdConta Id da conta.
   * @param IdIdentificador Identificador do executor Transação.
   * @param IdAutorizador Id do autorizador.
   * @param Estorno Flag que representa se a Transação é um estorno.
   * @param Reversao Flag que representa se a Transação é uma reversão.
   * @param Status Enum que representa o status da Transação. Ex.: COMPENSADO.
   * @param Valor Valor da Transação.
   * @param FatorDebCred Identificador de lançamento de débito ou crédito.
   * @param TipoConta Enum que representa o tipo da Conta. Ex.: EC, PORTADOR
   * @param DataRepasse Data do repasse.
   * @param IdRazaoTransacao Identificador da razão de transação.
   * @param IdGrupoTransacao Identificador do grupo de transação.
   * @param IdTransacao Id da transação.
   * @param Atividade Enum que representa a atividade da Transação. Ex.: PASSAGEM_DENTRO_SLA.
   */
  public LancamentoAprovisionado(java.lang.CharSequence DataEnvio, java.lang.Long IdCoreBank, java.lang.CharSequence IdConta, java.lang.CharSequence IdIdentificador, java.lang.CharSequence IdAutorizador, java.lang.Integer Estorno, java.lang.Integer Reversao, java.lang.CharSequence Status, java.lang.Double Valor, java.lang.Integer FatorDebCred, java.lang.CharSequence TipoConta, java.lang.CharSequence DataRepasse, java.lang.Long IdRazaoTransacao, java.lang.Long IdGrupoTransacao, java.lang.CharSequence IdTransacao, java.lang.CharSequence Atividade) {
    this.DataEnvio = DataEnvio;
    this.IdCoreBank = IdCoreBank;
    this.IdConta = IdConta;
    this.IdIdentificador = IdIdentificador;
    this.IdAutorizador = IdAutorizador;
    this.Estorno = Estorno;
    this.Reversao = Reversao;
    this.Status = Status;
    this.Valor = Valor;
    this.FatorDebCred = FatorDebCred;
    this.TipoConta = TipoConta;
    this.DataRepasse = DataRepasse;
    this.IdRazaoTransacao = IdRazaoTransacao;
    this.IdGrupoTransacao = IdGrupoTransacao;
    this.IdTransacao = IdTransacao;
    this.Atividade = Atividade;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return DataEnvio;
    case 1: return IdCoreBank;
    case 2: return IdConta;
    case 3: return IdIdentificador;
    case 4: return IdAutorizador;
    case 5: return Estorno;
    case 6: return Reversao;
    case 7: return Status;
    case 8: return Valor;
    case 9: return FatorDebCred;
    case 10: return TipoConta;
    case 11: return DataRepasse;
    case 12: return IdRazaoTransacao;
    case 13: return IdGrupoTransacao;
    case 14: return IdTransacao;
    case 15: return Atividade;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: DataEnvio = (java.lang.CharSequence)value$; break;
    case 1: IdCoreBank = (java.lang.Long)value$; break;
    case 2: IdConta = (java.lang.CharSequence)value$; break;
    case 3: IdIdentificador = (java.lang.CharSequence)value$; break;
    case 4: IdAutorizador = (java.lang.CharSequence)value$; break;
    case 5: Estorno = (java.lang.Integer)value$; break;
    case 6: Reversao = (java.lang.Integer)value$; break;
    case 7: Status = (java.lang.CharSequence)value$; break;
    case 8: Valor = (java.lang.Double)value$; break;
    case 9: FatorDebCred = (java.lang.Integer)value$; break;
    case 10: TipoConta = (java.lang.CharSequence)value$; break;
    case 11: DataRepasse = (java.lang.CharSequence)value$; break;
    case 12: IdRazaoTransacao = (java.lang.Long)value$; break;
    case 13: IdGrupoTransacao = (java.lang.Long)value$; break;
    case 14: IdTransacao = (java.lang.CharSequence)value$; break;
    case 15: Atividade = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'DataEnvio' field.
   * @return Data do envio.
   */
  public java.lang.CharSequence getDataEnvio() {
    return DataEnvio;
  }

  /**
   * Sets the value of the 'DataEnvio' field.
   * Data do envio.
   * @param value the value to set.
   */
  public void setDataEnvio(java.lang.CharSequence value) {
    this.DataEnvio = value;
  }

  /**
   * Gets the value of the 'IdCoreBank' field.
   * @return Id no core bank.
   */
  public java.lang.Long getIdCoreBank() {
    return IdCoreBank;
  }

  /**
   * Sets the value of the 'IdCoreBank' field.
   * Id no core bank.
   * @param value the value to set.
   */
  public void setIdCoreBank(java.lang.Long value) {
    this.IdCoreBank = value;
  }

  /**
   * Gets the value of the 'IdConta' field.
   * @return Id da conta.
   */
  public java.lang.CharSequence getIdConta() {
    return IdConta;
  }

  /**
   * Sets the value of the 'IdConta' field.
   * Id da conta.
   * @param value the value to set.
   */
  public void setIdConta(java.lang.CharSequence value) {
    this.IdConta = value;
  }

  /**
   * Gets the value of the 'IdIdentificador' field.
   * @return Identificador do executor Transação.
   */
  public java.lang.CharSequence getIdIdentificador() {
    return IdIdentificador;
  }

  /**
   * Sets the value of the 'IdIdentificador' field.
   * Identificador do executor Transação.
   * @param value the value to set.
   */
  public void setIdIdentificador(java.lang.CharSequence value) {
    this.IdIdentificador = value;
  }

  /**
   * Gets the value of the 'IdAutorizador' field.
   * @return Id do autorizador.
   */
  public java.lang.CharSequence getIdAutorizador() {
    return IdAutorizador;
  }

  /**
   * Sets the value of the 'IdAutorizador' field.
   * Id do autorizador.
   * @param value the value to set.
   */
  public void setIdAutorizador(java.lang.CharSequence value) {
    this.IdAutorizador = value;
  }

  /**
   * Gets the value of the 'Estorno' field.
   * @return Flag que representa se a Transação é um estorno.
   */
  public java.lang.Integer getEstorno() {
    return Estorno;
  }

  /**
   * Sets the value of the 'Estorno' field.
   * Flag que representa se a Transação é um estorno.
   * @param value the value to set.
   */
  public void setEstorno(java.lang.Integer value) {
    this.Estorno = value;
  }

  /**
   * Gets the value of the 'Reversao' field.
   * @return Flag que representa se a Transação é uma reversão.
   */
  public java.lang.Integer getReversao() {
    return Reversao;
  }

  /**
   * Sets the value of the 'Reversao' field.
   * Flag que representa se a Transação é uma reversão.
   * @param value the value to set.
   */
  public void setReversao(java.lang.Integer value) {
    this.Reversao = value;
  }

  /**
   * Gets the value of the 'Status' field.
   * @return Enum que representa o status da Transação. Ex.: COMPENSADO.
   */
  public java.lang.CharSequence getStatus() {
    return Status;
  }

  /**
   * Sets the value of the 'Status' field.
   * Enum que representa o status da Transação. Ex.: COMPENSADO.
   * @param value the value to set.
   */
  public void setStatus(java.lang.CharSequence value) {
    this.Status = value;
  }

  /**
   * Gets the value of the 'Valor' field.
   * @return Valor da Transação.
   */
  public java.lang.Double getValor() {
    return Valor;
  }

  /**
   * Sets the value of the 'Valor' field.
   * Valor da Transação.
   * @param value the value to set.
   */
  public void setValor(java.lang.Double value) {
    this.Valor = value;
  }

  /**
   * Gets the value of the 'FatorDebCred' field.
   * @return Identificador de lançamento de débito ou crédito.
   */
  public java.lang.Integer getFatorDebCred() {
    return FatorDebCred;
  }

  /**
   * Sets the value of the 'FatorDebCred' field.
   * Identificador de lançamento de débito ou crédito.
   * @param value the value to set.
   */
  public void setFatorDebCred(java.lang.Integer value) {
    this.FatorDebCred = value;
  }

  /**
   * Gets the value of the 'TipoConta' field.
   * @return Enum que representa o tipo da Conta. Ex.: EC, PORTADOR
   */
  public java.lang.CharSequence getTipoConta() {
    return TipoConta;
  }

  /**
   * Sets the value of the 'TipoConta' field.
   * Enum que representa o tipo da Conta. Ex.: EC, PORTADOR
   * @param value the value to set.
   */
  public void setTipoConta(java.lang.CharSequence value) {
    this.TipoConta = value;
  }

  /**
   * Gets the value of the 'DataRepasse' field.
   * @return Data do repasse.
   */
  public java.lang.CharSequence getDataRepasse() {
    return DataRepasse;
  }

  /**
   * Sets the value of the 'DataRepasse' field.
   * Data do repasse.
   * @param value the value to set.
   */
  public void setDataRepasse(java.lang.CharSequence value) {
    this.DataRepasse = value;
  }

  /**
   * Gets the value of the 'IdRazaoTransacao' field.
   * @return Identificador da razão de transação.
   */
  public java.lang.Long getIdRazaoTransacao() {
    return IdRazaoTransacao;
  }

  /**
   * Sets the value of the 'IdRazaoTransacao' field.
   * Identificador da razão de transação.
   * @param value the value to set.
   */
  public void setIdRazaoTransacao(java.lang.Long value) {
    this.IdRazaoTransacao = value;
  }

  /**
   * Gets the value of the 'IdGrupoTransacao' field.
   * @return Identificador do grupo de transação.
   */
  public java.lang.Long getIdGrupoTransacao() {
    return IdGrupoTransacao;
  }

  /**
   * Sets the value of the 'IdGrupoTransacao' field.
   * Identificador do grupo de transação.
   * @param value the value to set.
   */
  public void setIdGrupoTransacao(java.lang.Long value) {
    this.IdGrupoTransacao = value;
  }

  /**
   * Gets the value of the 'IdTransacao' field.
   * @return Id da transação.
   */
  public java.lang.CharSequence getIdTransacao() {
    return IdTransacao;
  }

  /**
   * Sets the value of the 'IdTransacao' field.
   * Id da transação.
   * @param value the value to set.
   */
  public void setIdTransacao(java.lang.CharSequence value) {
    this.IdTransacao = value;
  }

  /**
   * Gets the value of the 'Atividade' field.
   * @return Enum que representa a atividade da Transação. Ex.: PASSAGEM_DENTRO_SLA.
   */
  public java.lang.CharSequence getAtividade() {
    return Atividade;
  }

  /**
   * Sets the value of the 'Atividade' field.
   * Enum que representa a atividade da Transação. Ex.: PASSAGEM_DENTRO_SLA.
   * @param value the value to set.
   */
  public void setAtividade(java.lang.CharSequence value) {
    this.Atividade = value;
  }

  /**
   * Creates a new LancamentoAprovisionado RecordBuilder.
   * @return A new LancamentoAprovisionado RecordBuilder
   */
  public static br.com.veloe.mecanicafinanceira.LancamentoAprovisionado.Builder newBuilder() {
    return new br.com.veloe.mecanicafinanceira.LancamentoAprovisionado.Builder();
  }

  /**
   * Creates a new LancamentoAprovisionado RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new LancamentoAprovisionado RecordBuilder
   */
  public static br.com.veloe.mecanicafinanceira.LancamentoAprovisionado.Builder newBuilder(br.com.veloe.mecanicafinanceira.LancamentoAprovisionado.Builder other) {
    return new br.com.veloe.mecanicafinanceira.LancamentoAprovisionado.Builder(other);
  }

  /**
   * Creates a new LancamentoAprovisionado RecordBuilder by copying an existing LancamentoAprovisionado instance.
   * @param other The existing instance to copy.
   * @return A new LancamentoAprovisionado RecordBuilder
   */
  public static br.com.veloe.mecanicafinanceira.LancamentoAprovisionado.Builder newBuilder(br.com.veloe.mecanicafinanceira.LancamentoAprovisionado other) {
    return new br.com.veloe.mecanicafinanceira.LancamentoAprovisionado.Builder(other);
  }

  /**
   * RecordBuilder for LancamentoAprovisionado instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<LancamentoAprovisionado>
    implements org.apache.avro.data.RecordBuilder<LancamentoAprovisionado> {

    /** Data do envio. */
    private java.lang.CharSequence DataEnvio;
    /** Id no core bank. */
    private java.lang.Long IdCoreBank;
    /** Id da conta. */
    private java.lang.CharSequence IdConta;
    /** Identificador do executor Transação. */
    private java.lang.CharSequence IdIdentificador;
    /** Id do autorizador. */
    private java.lang.CharSequence IdAutorizador;
    /** Flag que representa se a Transação é um estorno. */
    private java.lang.Integer Estorno;
    /** Flag que representa se a Transação é uma reversão. */
    private java.lang.Integer Reversao;
    /** Enum que representa o status da Transação. Ex.: COMPENSADO. */
    private java.lang.CharSequence Status;
    /** Valor da Transação. */
    private java.lang.Double Valor;
    /** Identificador de lançamento de débito ou crédito. */
    private java.lang.Integer FatorDebCred;
    /** Enum que representa o tipo da Conta. Ex.: EC, PORTADOR */
    private java.lang.CharSequence TipoConta;
    /** Data do repasse. */
    private java.lang.CharSequence DataRepasse;
    /** Identificador da razão de transação. */
    private java.lang.Long IdRazaoTransacao;
    /** Identificador do grupo de transação. */
    private java.lang.Long IdGrupoTransacao;
    /** Id da transação. */
    private java.lang.CharSequence IdTransacao;
    /** Enum que representa a atividade da Transação. Ex.: PASSAGEM_DENTRO_SLA. */
    private java.lang.CharSequence Atividade;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(br.com.veloe.mecanicafinanceira.LancamentoAprovisionado.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.DataEnvio)) {
        this.DataEnvio = data().deepCopy(fields()[0].schema(), other.DataEnvio);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.IdCoreBank)) {
        this.IdCoreBank = data().deepCopy(fields()[1].schema(), other.IdCoreBank);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.IdConta)) {
        this.IdConta = data().deepCopy(fields()[2].schema(), other.IdConta);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.IdIdentificador)) {
        this.IdIdentificador = data().deepCopy(fields()[3].schema(), other.IdIdentificador);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.IdAutorizador)) {
        this.IdAutorizador = data().deepCopy(fields()[4].schema(), other.IdAutorizador);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.Estorno)) {
        this.Estorno = data().deepCopy(fields()[5].schema(), other.Estorno);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.Reversao)) {
        this.Reversao = data().deepCopy(fields()[6].schema(), other.Reversao);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.Status)) {
        this.Status = data().deepCopy(fields()[7].schema(), other.Status);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.Valor)) {
        this.Valor = data().deepCopy(fields()[8].schema(), other.Valor);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.FatorDebCred)) {
        this.FatorDebCred = data().deepCopy(fields()[9].schema(), other.FatorDebCred);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.TipoConta)) {
        this.TipoConta = data().deepCopy(fields()[10].schema(), other.TipoConta);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.DataRepasse)) {
        this.DataRepasse = data().deepCopy(fields()[11].schema(), other.DataRepasse);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.IdRazaoTransacao)) {
        this.IdRazaoTransacao = data().deepCopy(fields()[12].schema(), other.IdRazaoTransacao);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.IdGrupoTransacao)) {
        this.IdGrupoTransacao = data().deepCopy(fields()[13].schema(), other.IdGrupoTransacao);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.IdTransacao)) {
        this.IdTransacao = data().deepCopy(fields()[14].schema(), other.IdTransacao);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.Atividade)) {
        this.Atividade = data().deepCopy(fields()[15].schema(), other.Atividade);
        fieldSetFlags()[15] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing LancamentoAprovisionado instance
     * @param other The existing instance to copy.
     */
    private Builder(br.com.veloe.mecanicafinanceira.LancamentoAprovisionado other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.DataEnvio)) {
        this.DataEnvio = data().deepCopy(fields()[0].schema(), other.DataEnvio);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.IdCoreBank)) {
        this.IdCoreBank = data().deepCopy(fields()[1].schema(), other.IdCoreBank);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.IdConta)) {
        this.IdConta = data().deepCopy(fields()[2].schema(), other.IdConta);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.IdIdentificador)) {
        this.IdIdentificador = data().deepCopy(fields()[3].schema(), other.IdIdentificador);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.IdAutorizador)) {
        this.IdAutorizador = data().deepCopy(fields()[4].schema(), other.IdAutorizador);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.Estorno)) {
        this.Estorno = data().deepCopy(fields()[5].schema(), other.Estorno);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.Reversao)) {
        this.Reversao = data().deepCopy(fields()[6].schema(), other.Reversao);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.Status)) {
        this.Status = data().deepCopy(fields()[7].schema(), other.Status);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.Valor)) {
        this.Valor = data().deepCopy(fields()[8].schema(), other.Valor);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.FatorDebCred)) {
        this.FatorDebCred = data().deepCopy(fields()[9].schema(), other.FatorDebCred);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.TipoConta)) {
        this.TipoConta = data().deepCopy(fields()[10].schema(), other.TipoConta);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.DataRepasse)) {
        this.DataRepasse = data().deepCopy(fields()[11].schema(), other.DataRepasse);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.IdRazaoTransacao)) {
        this.IdRazaoTransacao = data().deepCopy(fields()[12].schema(), other.IdRazaoTransacao);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.IdGrupoTransacao)) {
        this.IdGrupoTransacao = data().deepCopy(fields()[13].schema(), other.IdGrupoTransacao);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.IdTransacao)) {
        this.IdTransacao = data().deepCopy(fields()[14].schema(), other.IdTransacao);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.Atividade)) {
        this.Atividade = data().deepCopy(fields()[15].schema(), other.Atividade);
        fieldSetFlags()[15] = true;
      }
    }

    /**
      * Gets the value of the 'DataEnvio' field.
      * Data do envio.
      * @return The value.
      */
    public java.lang.CharSequence getDataEnvio() {
      return DataEnvio;
    }

    /**
      * Sets the value of the 'DataEnvio' field.
      * Data do envio.
      * @param value The value of 'DataEnvio'.
      * @return This builder.
      */
    public br.com.veloe.mecanicafinanceira.LancamentoAprovisionado.Builder setDataEnvio(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.DataEnvio = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'DataEnvio' field has been set.
      * Data do envio.
      * @return True if the 'DataEnvio' field has been set, false otherwise.
      */
    public boolean hasDataEnvio() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'DataEnvio' field.
      * Data do envio.
      * @return This builder.
      */
    public br.com.veloe.mecanicafinanceira.LancamentoAprovisionado.Builder clearDataEnvio() {
      DataEnvio = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'IdCoreBank' field.
      * Id no core bank.
      * @return The value.
      */
    public java.lang.Long getIdCoreBank() {
      return IdCoreBank;
    }

    /**
      * Sets the value of the 'IdCoreBank' field.
      * Id no core bank.
      * @param value The value of 'IdCoreBank'.
      * @return This builder.
      */
    public br.com.veloe.mecanicafinanceira.LancamentoAprovisionado.Builder setIdCoreBank(java.lang.Long value) {
      validate(fields()[1], value);
      this.IdCoreBank = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'IdCoreBank' field has been set.
      * Id no core bank.
      * @return True if the 'IdCoreBank' field has been set, false otherwise.
      */
    public boolean hasIdCoreBank() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'IdCoreBank' field.
      * Id no core bank.
      * @return This builder.
      */
    public br.com.veloe.mecanicafinanceira.LancamentoAprovisionado.Builder clearIdCoreBank() {
      IdCoreBank = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'IdConta' field.
      * Id da conta.
      * @return The value.
      */
    public java.lang.CharSequence getIdConta() {
      return IdConta;
    }

    /**
      * Sets the value of the 'IdConta' field.
      * Id da conta.
      * @param value The value of 'IdConta'.
      * @return This builder.
      */
    public br.com.veloe.mecanicafinanceira.LancamentoAprovisionado.Builder setIdConta(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.IdConta = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'IdConta' field has been set.
      * Id da conta.
      * @return True if the 'IdConta' field has been set, false otherwise.
      */
    public boolean hasIdConta() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'IdConta' field.
      * Id da conta.
      * @return This builder.
      */
    public br.com.veloe.mecanicafinanceira.LancamentoAprovisionado.Builder clearIdConta() {
      IdConta = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'IdIdentificador' field.
      * Identificador do executor Transação.
      * @return The value.
      */
    public java.lang.CharSequence getIdIdentificador() {
      return IdIdentificador;
    }

    /**
      * Sets the value of the 'IdIdentificador' field.
      * Identificador do executor Transação.
      * @param value The value of 'IdIdentificador'.
      * @return This builder.
      */
    public br.com.veloe.mecanicafinanceira.LancamentoAprovisionado.Builder setIdIdentificador(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.IdIdentificador = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'IdIdentificador' field has been set.
      * Identificador do executor Transação.
      * @return True if the 'IdIdentificador' field has been set, false otherwise.
      */
    public boolean hasIdIdentificador() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'IdIdentificador' field.
      * Identificador do executor Transação.
      * @return This builder.
      */
    public br.com.veloe.mecanicafinanceira.LancamentoAprovisionado.Builder clearIdIdentificador() {
      IdIdentificador = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'IdAutorizador' field.
      * Id do autorizador.
      * @return The value.
      */
    public java.lang.CharSequence getIdAutorizador() {
      return IdAutorizador;
    }

    /**
      * Sets the value of the 'IdAutorizador' field.
      * Id do autorizador.
      * @param value The value of 'IdAutorizador'.
      * @return This builder.
      */
    public br.com.veloe.mecanicafinanceira.LancamentoAprovisionado.Builder setIdAutorizador(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.IdAutorizador = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'IdAutorizador' field has been set.
      * Id do autorizador.
      * @return True if the 'IdAutorizador' field has been set, false otherwise.
      */
    public boolean hasIdAutorizador() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'IdAutorizador' field.
      * Id do autorizador.
      * @return This builder.
      */
    public br.com.veloe.mecanicafinanceira.LancamentoAprovisionado.Builder clearIdAutorizador() {
      IdAutorizador = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'Estorno' field.
      * Flag que representa se a Transação é um estorno.
      * @return The value.
      */
    public java.lang.Integer getEstorno() {
      return Estorno;
    }

    /**
      * Sets the value of the 'Estorno' field.
      * Flag que representa se a Transação é um estorno.
      * @param value The value of 'Estorno'.
      * @return This builder.
      */
    public br.com.veloe.mecanicafinanceira.LancamentoAprovisionado.Builder setEstorno(java.lang.Integer value) {
      validate(fields()[5], value);
      this.Estorno = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'Estorno' field has been set.
      * Flag que representa se a Transação é um estorno.
      * @return True if the 'Estorno' field has been set, false otherwise.
      */
    public boolean hasEstorno() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'Estorno' field.
      * Flag que representa se a Transação é um estorno.
      * @return This builder.
      */
    public br.com.veloe.mecanicafinanceira.LancamentoAprovisionado.Builder clearEstorno() {
      Estorno = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'Reversao' field.
      * Flag que representa se a Transação é uma reversão.
      * @return The value.
      */
    public java.lang.Integer getReversao() {
      return Reversao;
    }

    /**
      * Sets the value of the 'Reversao' field.
      * Flag que representa se a Transação é uma reversão.
      * @param value The value of 'Reversao'.
      * @return This builder.
      */
    public br.com.veloe.mecanicafinanceira.LancamentoAprovisionado.Builder setReversao(java.lang.Integer value) {
      validate(fields()[6], value);
      this.Reversao = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'Reversao' field has been set.
      * Flag que representa se a Transação é uma reversão.
      * @return True if the 'Reversao' field has been set, false otherwise.
      */
    public boolean hasReversao() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'Reversao' field.
      * Flag que representa se a Transação é uma reversão.
      * @return This builder.
      */
    public br.com.veloe.mecanicafinanceira.LancamentoAprovisionado.Builder clearReversao() {
      Reversao = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'Status' field.
      * Enum que representa o status da Transação. Ex.: COMPENSADO.
      * @return The value.
      */
    public java.lang.CharSequence getStatus() {
      return Status;
    }

    /**
      * Sets the value of the 'Status' field.
      * Enum que representa o status da Transação. Ex.: COMPENSADO.
      * @param value The value of 'Status'.
      * @return This builder.
      */
    public br.com.veloe.mecanicafinanceira.LancamentoAprovisionado.Builder setStatus(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.Status = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'Status' field has been set.
      * Enum que representa o status da Transação. Ex.: COMPENSADO.
      * @return True if the 'Status' field has been set, false otherwise.
      */
    public boolean hasStatus() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'Status' field.
      * Enum que representa o status da Transação. Ex.: COMPENSADO.
      * @return This builder.
      */
    public br.com.veloe.mecanicafinanceira.LancamentoAprovisionado.Builder clearStatus() {
      Status = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'Valor' field.
      * Valor da Transação.
      * @return The value.
      */
    public java.lang.Double getValor() {
      return Valor;
    }

    /**
      * Sets the value of the 'Valor' field.
      * Valor da Transação.
      * @param value The value of 'Valor'.
      * @return This builder.
      */
    public br.com.veloe.mecanicafinanceira.LancamentoAprovisionado.Builder setValor(java.lang.Double value) {
      validate(fields()[8], value);
      this.Valor = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'Valor' field has been set.
      * Valor da Transação.
      * @return True if the 'Valor' field has been set, false otherwise.
      */
    public boolean hasValor() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'Valor' field.
      * Valor da Transação.
      * @return This builder.
      */
    public br.com.veloe.mecanicafinanceira.LancamentoAprovisionado.Builder clearValor() {
      Valor = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'FatorDebCred' field.
      * Identificador de lançamento de débito ou crédito.
      * @return The value.
      */
    public java.lang.Integer getFatorDebCred() {
      return FatorDebCred;
    }

    /**
      * Sets the value of the 'FatorDebCred' field.
      * Identificador de lançamento de débito ou crédito.
      * @param value The value of 'FatorDebCred'.
      * @return This builder.
      */
    public br.com.veloe.mecanicafinanceira.LancamentoAprovisionado.Builder setFatorDebCred(java.lang.Integer value) {
      validate(fields()[9], value);
      this.FatorDebCred = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'FatorDebCred' field has been set.
      * Identificador de lançamento de débito ou crédito.
      * @return True if the 'FatorDebCred' field has been set, false otherwise.
      */
    public boolean hasFatorDebCred() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'FatorDebCred' field.
      * Identificador de lançamento de débito ou crédito.
      * @return This builder.
      */
    public br.com.veloe.mecanicafinanceira.LancamentoAprovisionado.Builder clearFatorDebCred() {
      FatorDebCred = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'TipoConta' field.
      * Enum que representa o tipo da Conta. Ex.: EC, PORTADOR
      * @return The value.
      */
    public java.lang.CharSequence getTipoConta() {
      return TipoConta;
    }

    /**
      * Sets the value of the 'TipoConta' field.
      * Enum que representa o tipo da Conta. Ex.: EC, PORTADOR
      * @param value The value of 'TipoConta'.
      * @return This builder.
      */
    public br.com.veloe.mecanicafinanceira.LancamentoAprovisionado.Builder setTipoConta(java.lang.CharSequence value) {
      validate(fields()[10], value);
      this.TipoConta = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'TipoConta' field has been set.
      * Enum que representa o tipo da Conta. Ex.: EC, PORTADOR
      * @return True if the 'TipoConta' field has been set, false otherwise.
      */
    public boolean hasTipoConta() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'TipoConta' field.
      * Enum que representa o tipo da Conta. Ex.: EC, PORTADOR
      * @return This builder.
      */
    public br.com.veloe.mecanicafinanceira.LancamentoAprovisionado.Builder clearTipoConta() {
      TipoConta = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'DataRepasse' field.
      * Data do repasse.
      * @return The value.
      */
    public java.lang.CharSequence getDataRepasse() {
      return DataRepasse;
    }

    /**
      * Sets the value of the 'DataRepasse' field.
      * Data do repasse.
      * @param value The value of 'DataRepasse'.
      * @return This builder.
      */
    public br.com.veloe.mecanicafinanceira.LancamentoAprovisionado.Builder setDataRepasse(java.lang.CharSequence value) {
      validate(fields()[11], value);
      this.DataRepasse = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'DataRepasse' field has been set.
      * Data do repasse.
      * @return True if the 'DataRepasse' field has been set, false otherwise.
      */
    public boolean hasDataRepasse() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'DataRepasse' field.
      * Data do repasse.
      * @return This builder.
      */
    public br.com.veloe.mecanicafinanceira.LancamentoAprovisionado.Builder clearDataRepasse() {
      DataRepasse = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'IdRazaoTransacao' field.
      * Identificador da razão de transação.
      * @return The value.
      */
    public java.lang.Long getIdRazaoTransacao() {
      return IdRazaoTransacao;
    }

    /**
      * Sets the value of the 'IdRazaoTransacao' field.
      * Identificador da razão de transação.
      * @param value The value of 'IdRazaoTransacao'.
      * @return This builder.
      */
    public br.com.veloe.mecanicafinanceira.LancamentoAprovisionado.Builder setIdRazaoTransacao(java.lang.Long value) {
      validate(fields()[12], value);
      this.IdRazaoTransacao = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'IdRazaoTransacao' field has been set.
      * Identificador da razão de transação.
      * @return True if the 'IdRazaoTransacao' field has been set, false otherwise.
      */
    public boolean hasIdRazaoTransacao() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'IdRazaoTransacao' field.
      * Identificador da razão de transação.
      * @return This builder.
      */
    public br.com.veloe.mecanicafinanceira.LancamentoAprovisionado.Builder clearIdRazaoTransacao() {
      IdRazaoTransacao = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'IdGrupoTransacao' field.
      * Identificador do grupo de transação.
      * @return The value.
      */
    public java.lang.Long getIdGrupoTransacao() {
      return IdGrupoTransacao;
    }

    /**
      * Sets the value of the 'IdGrupoTransacao' field.
      * Identificador do grupo de transação.
      * @param value The value of 'IdGrupoTransacao'.
      * @return This builder.
      */
    public br.com.veloe.mecanicafinanceira.LancamentoAprovisionado.Builder setIdGrupoTransacao(java.lang.Long value) {
      validate(fields()[13], value);
      this.IdGrupoTransacao = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'IdGrupoTransacao' field has been set.
      * Identificador do grupo de transação.
      * @return True if the 'IdGrupoTransacao' field has been set, false otherwise.
      */
    public boolean hasIdGrupoTransacao() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'IdGrupoTransacao' field.
      * Identificador do grupo de transação.
      * @return This builder.
      */
    public br.com.veloe.mecanicafinanceira.LancamentoAprovisionado.Builder clearIdGrupoTransacao() {
      IdGrupoTransacao = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'IdTransacao' field.
      * Id da transação.
      * @return The value.
      */
    public java.lang.CharSequence getIdTransacao() {
      return IdTransacao;
    }

    /**
      * Sets the value of the 'IdTransacao' field.
      * Id da transação.
      * @param value The value of 'IdTransacao'.
      * @return This builder.
      */
    public br.com.veloe.mecanicafinanceira.LancamentoAprovisionado.Builder setIdTransacao(java.lang.CharSequence value) {
      validate(fields()[14], value);
      this.IdTransacao = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'IdTransacao' field has been set.
      * Id da transação.
      * @return True if the 'IdTransacao' field has been set, false otherwise.
      */
    public boolean hasIdTransacao() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'IdTransacao' field.
      * Id da transação.
      * @return This builder.
      */
    public br.com.veloe.mecanicafinanceira.LancamentoAprovisionado.Builder clearIdTransacao() {
      IdTransacao = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'Atividade' field.
      * Enum que representa a atividade da Transação. Ex.: PASSAGEM_DENTRO_SLA.
      * @return The value.
      */
    public java.lang.CharSequence getAtividade() {
      return Atividade;
    }

    /**
      * Sets the value of the 'Atividade' field.
      * Enum que representa a atividade da Transação. Ex.: PASSAGEM_DENTRO_SLA.
      * @param value The value of 'Atividade'.
      * @return This builder.
      */
    public br.com.veloe.mecanicafinanceira.LancamentoAprovisionado.Builder setAtividade(java.lang.CharSequence value) {
      validate(fields()[15], value);
      this.Atividade = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'Atividade' field has been set.
      * Enum que representa a atividade da Transação. Ex.: PASSAGEM_DENTRO_SLA.
      * @return True if the 'Atividade' field has been set, false otherwise.
      */
    public boolean hasAtividade() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'Atividade' field.
      * Enum que representa a atividade da Transação. Ex.: PASSAGEM_DENTRO_SLA.
      * @return This builder.
      */
    public br.com.veloe.mecanicafinanceira.LancamentoAprovisionado.Builder clearAtividade() {
      Atividade = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public LancamentoAprovisionado build() {
      try {
        LancamentoAprovisionado record = new LancamentoAprovisionado();
        record.DataEnvio = fieldSetFlags()[0] ? this.DataEnvio : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.IdCoreBank = fieldSetFlags()[1] ? this.IdCoreBank : (java.lang.Long) defaultValue(fields()[1]);
        record.IdConta = fieldSetFlags()[2] ? this.IdConta : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.IdIdentificador = fieldSetFlags()[3] ? this.IdIdentificador : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.IdAutorizador = fieldSetFlags()[4] ? this.IdAutorizador : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.Estorno = fieldSetFlags()[5] ? this.Estorno : (java.lang.Integer) defaultValue(fields()[5]);
        record.Reversao = fieldSetFlags()[6] ? this.Reversao : (java.lang.Integer) defaultValue(fields()[6]);
        record.Status = fieldSetFlags()[7] ? this.Status : (java.lang.CharSequence) defaultValue(fields()[7]);
        record.Valor = fieldSetFlags()[8] ? this.Valor : (java.lang.Double) defaultValue(fields()[8]);
        record.FatorDebCred = fieldSetFlags()[9] ? this.FatorDebCred : (java.lang.Integer) defaultValue(fields()[9]);
        record.TipoConta = fieldSetFlags()[10] ? this.TipoConta : (java.lang.CharSequence) defaultValue(fields()[10]);
        record.DataRepasse = fieldSetFlags()[11] ? this.DataRepasse : (java.lang.CharSequence) defaultValue(fields()[11]);
        record.IdRazaoTransacao = fieldSetFlags()[12] ? this.IdRazaoTransacao : (java.lang.Long) defaultValue(fields()[12]);
        record.IdGrupoTransacao = fieldSetFlags()[13] ? this.IdGrupoTransacao : (java.lang.Long) defaultValue(fields()[13]);
        record.IdTransacao = fieldSetFlags()[14] ? this.IdTransacao : (java.lang.CharSequence) defaultValue(fields()[14]);
        record.Atividade = fieldSetFlags()[15] ? this.Atividade : (java.lang.CharSequence) defaultValue(fields()[15]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<LancamentoAprovisionado>
    WRITER$ = (org.apache.avro.io.DatumWriter<LancamentoAprovisionado>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<LancamentoAprovisionado>
    READER$ = (org.apache.avro.io.DatumReader<LancamentoAprovisionado>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
